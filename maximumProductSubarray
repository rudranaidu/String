Description: Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest product and return the product.
Input: nums = [2, 3, -2, 4]
Output: 6 (The subarray [2, 3] has the largest product, 6.)

int getLargestProductFromSubarray(int[] a) {
    if (a == null || a.length == 0) {
        return 0;
    }
    
    int maxProduct = a[0];
    int currentMax = a[0];
    int currentMin = a[0];
    
    for (int i = 1; i < a.length; i++) {
        // If the current element is negative, swap currentMax and currentMin
        if (a[i] < 0) {
            int temp = currentMax;
            currentMax = currentMin;
            currentMin = temp;
        }
        
        // Update currentMax and currentMin
        currentMax = Math.max(a[i], currentMax * a[i]);
        currentMin = Math.min(a[i], currentMin * a[i]);
        
        // Update maxProduct
        maxProduct = Math.max(maxProduct, currentMax);
    }
    
    return maxProduct;
}
