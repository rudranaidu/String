Input: head = [1, 2, 3, 4, 5], k = 2
Output: head = [4, 5, 1, 2, 3]

int[] inplaceRotation(int[] a, int k) {
    if (a == null || a.length == 0 || k == 0) {
        return a;
    }

    int n = a.length;
    k = k % n; // Ensure k is within bounds of array length

    // Step 1: Reverse the entire array
    reverse(a, 0, n - 1);

    // Step 2: Reverse the first k elements
    reverse(a, 0, k - 1);

    // Step 3: Reverse the remaining n - k elements
    reverse(a, k, n - 1);

    return a; // Return the rotated array
}

void reverse(int[] a, int left, int right) {
    while (left < right) {
        int temp = a[left];
        a[left] = a[right];
        a[right] = temp;
        left++;      // Move left pointer to the right
        right--;     // Move right pointer to the left
    }
}

